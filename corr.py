import pandas as pd
import numpy as np

aaamatrix=[
[1.0000,0.5613,0.7644,0.5820,-0.0317,0.1529,0.3168],
[0.5613,1.0000,0.4278,0.4857,-0.0354,0.0935,0.1804],
[0.7644,0.4278,1.0000,0.5720,-0.0276,0.0474,0.2042],
[0.5820,0.4857,0.5720,1.0000,0.0137,-0.0655,-0.0037],
[-0.0317,-0.0354,-0.0276,0.0137,1.0000,0.0628,0.0017],
[0.1529,0.0935,0.0474,-0.0655,0.0628,1.0000,0.7618],
[0.3168,0.1804,0.2042,-0.0037,0.0017,0.7618,1.0000]]
aaaindex=['US','INT','SMALL','AGGR','MONEY','INTGOV','LTCORP'] # NB these indexes are not used, info only
aaasds = [0.0434334,0.0490970,0.0582989,0.0711167,0.0012107,0.0102452,0.0162166]
aaadf = pd.DataFrame(aaamatrix,index=aaaindex,columns=aaaindex)
aaasddf = pd.Series(aaasds,index=aaaindex)

connmatrix=[
[1,0.799562079,0.353135579,0.929671166,0.947877081,0.870745554,0.597965752,0.882773426,0.037313045,0.034049833,0.019746678,0.038917085,0.00967359,0.026007961],
[0.799562079,1,0.176238826,0.679488964,0.83239557,0.801895482,0.83954986,0.958152,0.301213774,0.279504593,0.283165377,0.316915629,0.128848767,0.229552092],
[0.353135579,0.176238826,1,0.653321528,0.180815409,0.633919817,0.354796532,0.329594931,0.146975001,0.120998856,0.100123121,0.136027157,0.08211138,0.11495777],
[0.929671166,0.679488964,0.653321528,1,0.792996873,0.940748752,0.601131067,0.825395289,0.083037797,0.072493327,0.053649482,0.081458837,0.039055229,0.062505284],
[0.947877081,0.83239557,0.180815409,0.792996873,1,0.741015388,0.546693108,0.834117409,0.019582308,0.016455886,0.004869348,0.019907207,-0.004457691,0.011440109],
[0.870745554,0.801895482,0.633919817,0.940748752,0.741015388,1,0.797492614,0.926071164,0.197100006,0.179645231,0.166170168,0.202965892,0.09039574,0.149663929],
[0.597965752,0.83954986,0.354796532,0.601131067,0.546693108,0.797492614,1,0.85421567,0.322323519,0.295333423,0.300241051,0.336749268,0.141462882,0.245620342],
[0.882773426,0.958152,0.329594931,0.825395289,0.834117409,0.926071164,0.85421567,1,0.2467148,0.229861559,0.226104005,0.260204981,0.106854276,0.187221692],
[0.037313045,0.301213774,0.146975001,0.083037797,0.019582308,0.197100006,0.322323519,0.2467148,1,0.844735351,0.831980681,0.884250536,0.502665312,0.79641138],
[0.034049833,0.279504593,0.120998856,0.072493327,0.016455886,0.179645231,0.295333423,0.229861559,0.844735351,1,0.78781522,0.910979369,0.425184774,0.667857096],
[0.019746678,0.283165377,0.100123121,0.053649482,0.004869348,0.166170168,0.300241051,0.226104005,0.831980681,0.78781522,1,0.794581207,0.403182187,0.662416366],
[0.038917085,0.316915629,0.136027157,0.081458837,0.019907207,0.202965892,0.336749268,0.260204981,0.884250536,0.910979369,0.794581207,1,0.44546145,0.701223252],
[0.00967359,0.128848767,0.08211138,0.039055229,-0.004457691,0.09039574,0.141462882,0.106854276,0.502665312,0.425184774,0.403182187,0.44546145,1,0.411844048],
[0.026007961,0.229552092,0.11495777,0.062505284,0.011440109,0.149663929,0.245620342,0.187221692,0.79641138,0.667857096,0.662416366,0.701223252,0.411844048,1]]
connsds = [0.055910,0.110010,0.019757,0.031072,0.104717,0.033212,0.066116,0.061946,0.166184,0.188798,0.234041,0.174781,0.266478,0.179257]
connindex=['BondsGovtIntermediate','BondsCorpLongInv','MoneyMarket','BondsGovtShort','BondsGovtLong',
'BondsCorpShortInv','BondsCorpHighYield','BondsCorpIntermediateInv','EquityUSLargeCap','EquityUSSmallCap',
'EquityUSAggressive','EquityUSMidcap','EquityInternationalAggressive','EquityInternationalDiversified']
conndf = pd.DataFrame(connmatrix,index=connindex,columns=connindex)
connsddf = pd.Series(connsds,index=connindex)

def standarderr(ass_weights,pftype):
    if pftype == 'Conning':
        cmatr = conndf
        sdvec = connsddf 
    else:
        cmatr = aaadf 
        sdvec = aaasddf
    #print(ass_weights) # debug
    # remove total, r squared
    #keystogo = ['total', 'Predicted_R_Squared'] these are the last 2 items - see next line and rsquared
    wtsvecraw = dict((i[0],i[1]) for i in ass_weights[:-2]) # if i[0] not in keystogo)
    wtsvec = pd.Series(wtsvecraw)
    wtdsds = sdvec * wtsvec # weighted sds = weights * sds
    step1 = cmatr.dot(wtdsds)
    step2 = wtdsds.dot(step1)
    basestdev = step2 ** .5 # base std dev
    rsquared = ass_weights[-1][1] # last item is r-squared
    stdeverr = (((1/rsquared) ** 2 - 1) ** .5) * basestdev
    return stdeverr
            



